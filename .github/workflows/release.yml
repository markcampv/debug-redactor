name: Build and Release

on:
  push:
    tags:
      - 'v*'
    pull_request:
      branches:
        - main
permissions:
  contents: write

jobs:
  build-and-release:
    name: Build Binaries and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.15'

      # Build for Linux
      - name: Build Binary for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o debug-redactor
          zip debug-redactor_${GITHUB_REF_NAME#refs/tags/}_linux_amd64.zip debug-redactor

      # Build for macOS
      - name: Build Binary for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o debug-redactor
          zip debug-redactor_${GITHUB_REF_NAME#refs/tags/}_darwin_amd64.zip debug-redactor

      # Build for Windows
      - name: Build Binary for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o debug-redactor.exe
          zip debug-redactor_${GITHUB_REF_NAME#refs/tags/}_windows_amd64.zip debug-redactor.exe

      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # Upload Linux ZIP
      - name: Upload Linux ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debug-redactor_${GITHUB_REF_NAME#refs/tags/}_linux_amd64.zip
          asset_name: debug-redactor_${GITHUB_REF_NAME#refs/tags/}_linux_amd64.zip
          asset_content_type: application/zip

      # Upload macOS ZIP
      - name: Upload macOS ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debug-redactor_${GITHUB_REF_NAME#refs/tags/}_darwin_amd64.zip
          asset_name: debug-redactor_${GITHUB_REF_NAME#refs/tags/}_darwin_amd64.zip
          asset_content_type: application/zip

      # Upload Windows ZIP
      - name: Upload Windows ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debug-redactor_${GITHUB_REF_NAME#refs/tags/}_windows_amd64.zip
          asset_name: debug-redactor_${GITHUB_REF_NAME#refs/tags/}_windows_amd64.zip
          asset_content_type: application/zip

